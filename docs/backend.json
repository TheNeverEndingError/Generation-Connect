
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Generations Connect platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task posted by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Task entity."
        },
        "creatorId": {
          "type": "string",
          "description": "The UID of the user who created the task."
        },
        "title": {
          "type": "string",
          "description": "The title of the task."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the task."
        },
        "serviceType": {
          "type": "string",
          "description": "The type of service required for the task (e.g., Yard Work, Tech Help)."
        },
        "location": {
          "type": "string",
          "description": "The location where the task needs to be performed."
        },
        "budget": {
          "type": "number",
          "description": "The budget allocated for the task."
        },
        "status": {
          "type": "string",
          "description": "The current status of the task (e.g., open, in progress, completed)."
        },
        "applicantId": {
          "type": "string",
          "description": "The UID of the user assigned to the task."
        },
        "paymentMethod": {
          "type": "string",
          "description": "How the helper will be paid ('cash' or 'app')."
        },
        "taskDate": {
          "type": "string",
          "format": "date",
          "description": "The requested date for the task."
        }
      },
      "required": [
        "id",
        "creatorId",
        "title",
        "description",
        "serviceType",
        "location",
        "budget",
        "status",
        "paymentMethod",
        "taskDate"
      ]
    },
    "Application": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Application",
      "type": "object",
      "description": "Represents a user's application to a specific task.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Application entity."
        },
        "applicantId": {
          "type": "string",
          "description": "The UID of the user applying for the task."
        },
        "taskId": {
          "type": "string",
          "description": "Reference to Task."
        },
        "applicationDate": {
          "type": "string",
          "description": "The date when the application was submitted.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The status of the application (e.g., pending, accepted, rejected)."
        },
        "notes": {
          "type": "string",
          "description": "Additional notes from the user regarding their application."
        }
      },
      "required": [
        "id",
        "applicantId",
        "taskId",
        "applicationDate",
        "status"
      ]
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Message",
      "type": "object",
      "description": "Represents a chat message between a task creator and an applicant.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the message." },
        "text": { "type": "string", "description": "The content of the message." },
        "senderId": { "type": "string", "description": "The UID of the user who sent the message." },
        "timestamp": { "type": "object", "description": "The server-side timestamp of when the message was created." }
      },
      "required": ["id", "text", "senderId", "timestamp"]
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user information.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": {
            "$ref": "#/backend/entities/Task"
          },
          "description": "Stores task information posted by users.",
          "params": [
            {
              "name": "taskId",
              "description": "The unique identifier for the task."
            }
          ]
        }
      },
      {
        "path": "/tasks/{taskId}/applications/{applicationId}",
        "definition": {
          "entityName": "Application",
          "schema": {
            "$ref": "#/backend/entities/Application"
          },
          "description": "Stores user applications for a specific task.",
          "params": [
            {
              "name": "taskId",
              "description": "The unique identifier for the task."
            },
            {
              "name": "applicationId",
              "description": "The unique identifier for the application."
            }
          ]
        }
      },
       {
        "path": "/tasks/{taskId}/messages/{messageId}",
        "definition": {
          "entityName": "Message",
          "schema": { "$ref": "#/backend/entities/Message" },
          "description": "Stores chat messages for a specific task.",
          "params": [
            { "name": "taskId", "description": "The unique identifier for the task." },
            { "name": "messageId", "description": "The unique identifier for the message." }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is simplified for a generic user model. All users can create and apply for tasks. The distinction between 'senior' and 'student' profiles has been removed. Added a Message entity and subcollection for the chat system."
  }
}
